<apex:component controller="SalesEngineerDashboardController">
    
    <style>
        div#gridmenu5{
        width:205px !important;
        }
        .alert-box {
        padding: 15px;
        top: 0;
        left: 45%;
        border: 1px solid transparent;
        border-radius: 4px;
        position: fixed;
        z-index:999;
        }
        
        .success {
        color: #3c763d;
        background-color: #dff0d8;
        border-color: #d6e9c6;
        display: none;
        }
        .jqx-grid-column-header.jqx-widget-header
        {
        background-color: black !important;
        color:white!important;
        }
        .failure {
        color: #a94442;
        background-color: #f2dede;
        border-color: #ebccd1;
        display: none;
        }
        
        .warning {
        color: #8a6d3b;
        background-color: #fcf8e3;
        border-color: #faebcc;
        display: none;
        }
        .scustom{
        height:30px;
        background-color: white;
        color:black;
        }
        .savebtn{
        bottom: 35px;
        z-index: 999;
        margin: 0 auto;
        }
        .jqx-grid-pager-number {
        line-height: 27px !important;
        }
        .jqx-widget .jqx-grid-cell, .jqx-widget .jqx-grid-column-header, .jqx-widget .jqx-grid-group-cell
        {
        border:none !important;
        }
        ul li, ol li {
        margin-left: 0.5em;
        }
        
    </style>
   
    <script>	
   
            var dataToUpdate = [];
    $(document).ready(function (){  
       
        var linkrenderer = function (row, column, value) {
            // value = "https://"+value;
            if (value.indexOf('#') != -1) {
                value = value.substring(0, value.indexOf('#'));
            }
            var format = { target: '"_blank"' };
            var html = $.jqx.dataFormat.formatlink(value, format);
            return html;
        }
        var tableDataJson = [];
        var tableJsondata = [];
        try{
            
            var opp = {!allOpportunity};
       		tableJsondata = {!allCalendars};   
        }
        catch(err) {
            //  document.getElementById("jqxgrid").innerHTML = err.message;
        }
        //start opp data
        var oppdata=[];
        tableJsondata = {!allCalendars};   
        console.log('tabl-'+tableJsondata);
        opp.forEach(function(oppobj){
        	oppdata.push(oppobj.Name);	 
        });
        //end
         
        var maindata=[];
        tableJsondata.items.forEach(function(obj){
            var email = '';
            try{
                email = obj.attendees[0]["email"];
            }
            catch(err){
                
            }
            maindata.push({'GC_Event_id__c':obj.id,'htmlLink':obj.htmlLink,'summary':obj.summary,'Start': obj.start["dateTime"],'attendees': email,'Opportunity__c' :oppdata });
        });
        console.log(maindata);
        var setFields = ['GC_Event_id__c','summary','attendees','Start','htmlLink','Opportunity__c'];
        
        maindata.forEach(function(obj){
            var dynObj = {};
            setFields.forEach(function(field){
                
                if(field.indexOf('.') != -1)
                {
                    var key0 = field.split('.')[0];
                    var key1 = field.split('.')[1];
                    val = obj[key0].get(key1);
                }
                else
                {
                    val = obj[field];
                }
                dynObj[field] = val;
            });
            tableDataJson.push(dynObj); 
        });
        
        var tableFields =  [{"type":"String","name":"GC_Event_id__c"},{"type":"String","name":"summary"},{"type":"String","name":"attendees"},{"type":"String","name":"Start"},{"type":"String","name":"htmlLink"},{"type":"picklist","name":"Opportunity__c"}];
        var source ={   
            localdata: tableDataJson,
            datatype: "array",
            datafields:tableFields                                         
        };
        var dataAdapter = new $.jqx.dataAdapter(source);
        var tabledata = [
            { text: 'Id', datafield: 'GC_Event_id__c', width: 215,editable: false,"hidden":true },
            { text: 'Subject', datafield: 'summary', width: 215,editable: false, },
            { text: 'Attendees', datafield: 'attendees', width: 215 ,editable: false,},
            { text: 'Start', datafield: 'Start', width: 215,editable: false, },
            { text: 'Link', datafield: 'htmlLink', width: 215,editable: false,'cellsrenderer': linkrenderer },
            { text: 'Opportunity', datafield: 'Opportunity__c', width: 215, columntype: 'dropdownlist',createeditor: function (row, cellvalue, editor, celltext, cellwidth, cellheight) {
                 var dataSource = oppdata;
                editor.jqxDropDownList({source: dataSource });
               

                 
        }},
            { text: 'Type', datafield: 'Type',width: 200 ,editable: false}
        ];
        $("#jqxgrid").jqxGrid(
            {
                width: "1275",
                source: dataAdapter,
                columnsresize: true,
                autoHeight: true,
                columns: tabledata,
                editmode: 'selectedrow',
                editable: true,
                pageable: true,   
                theme: 'energyblue'
            });
        
          $("#jqxgrid").on('cellbeginedit', function (event) {
                          console.log('dataToUpdate--begin--',dataToUpdate);
                      });
                      $("#jqxgrid").on('cellendedit', function (event) { 
                          var i = -1; // Index
                          var flag = 0; // Flag to check if Record is new or old
                          var j = 0; // looping Variable
                          var args = event.args;
                          var ObjToUpdate = new sforce.SObject("GC_Event__c"); // Object Container
                          ObjToUpdate.GC_Event_id__c = args.row.GC_Event_id__c;  
                          console.log('args.rowindex',args.rowindex);
                          if(event.args.oldvalue != event.args.value) {
                              for(j=0;j<dataToUpdate.length;j++)
                              {
                                  i++;
                                  if (dataToUpdate[j].Id == ObjToUpdate.Id)
                                  {
                                      ObjToUpdate = dataToUpdate[j];
                                      flag = 1;
                                      break;
                                  }
                              }
                              if(flag==0)
                              {
                                  dataToUpdate.push(ObjToUpdate);
                                  i++;
                                  console.log('--Args--',args);
                                  console.log('dataToUpdate---',dataToUpdate);
                              } 
                              ObjToUpdate[args.datafield] =  args.value;
                              dataToUpdate[i]=ObjToUpdate;
                              console.log('dataToUpdate--edited-->',dataToUpdate);
                              
                              
                          }
                          
                          
                      });
       
     			
                
    });

     function saveTable() {
        try{
              sforce.connection.sessionId = "{!$Api.Session_ID}";
              console.log('dataToUpdate-->>',dataToUpdate);
              var dataToUpsert = new sforce.SObject("GC_Event__c");  
              dataToUpsert = dataToUpdate;
              console.log('LeadToUpdate--',dataToUpsert);
            try{
              var result = sforce.connection.upsert("Id",dataToUpsert);
              }catch(er){
                     console.log('Error occured: ', er.message,'line', er.message);
                  }
            console.log('result--',result);
             
              if( result[0].success === "true" ) { 
            			$( "div.success" ).fadeIn( 300 ).delay( 1500 ).fadeOut( 400 ); 
                  		dataToUpdate=[];
                    } 
              else { 
                  $( "div.failure" ).fadeIn( 300 ).delay( 1500 ).fadeOut( 400 );
                        console.log('Error occured: ',result[0].errors.message ); 
                  	dataToUpdate=[];
              }
        }
        catch(err)
        {
            $( "div.failure" ).fadeIn( 300 ).delay( 1500 ).fadeOut( 400 );
            console.log('Error occured: ', err.message);
            	dataToUpdate=[];
        }
    } 
    </script>
   
   
    <div class="alert-box success">Data Saved Successfully</div>
    <div class="alert-box failure">Processing Failed</div>
    <br />
    
    <div id="setlink" style="margin-top:50px;margin-bottom:30px; padding:0px 20px;float: left; width: 100%; display: inline-block;">
        <h1 style="font-size: 18px;display:{!showbtn};"  >Google Calendar </h1>
      <div style="display:inline-flex;">
      	
            <div id="jqxgrid"></div>
           
      </div>
     <button id="btnSave"  onclick="saveTable()" class="savebtn ui-button ui-widget ui-corner-all" style= "display:{!showbtn};">Save</button>
    </div>


</apex:component>